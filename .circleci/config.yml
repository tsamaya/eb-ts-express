# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:14.17
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      # - node/install-packages:
      #     pkg-manager: yarn
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Run build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build/*
  deploy:
    docker:
      - image: cimg/node:14.17
    steps:
      # Checkout the code as the first step.
      - checkout
      - node/install-packages
      - attach_workspace:
          at: .
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip awscli build-essential
            pip3 install awscli --upgrade --user
            pip3 install awsebcli --upgrade --user
      - run:
          name: Create AWS credentials config
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli.aeweb]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: EB bundle
          command: npm run dist
      - run:
          name: EB deploy
          command: npm run deploy

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  eb-ts-exress:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters: # using regex filters requires the entire branch to match
            branches:
              only:
                - main
